name: Docker Image CI

on:
  push:
    branches:
      - feature/*
      - develop
      - main
      - master
  pull_request:
    branches:
      - feature/*
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run: npm i
  
      - name: Run Tests      
        run: npm test     
        if: github.ref == 'refs/heads/develop' || (github.event_name == 'pull_request' && github.base_ref == 'refs/heads/develop')    

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3.0.0

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: |
      github.ref == 'refs/heads/develop' && github.event_name == 'pull_request' && github.base_ref == 'refs/heads/master' ||
      github.ref == 'refs/heads/master' && (github.event_name == 'push' || github.event_name == 'pull_request') ||
      github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
      - name: Azure login
        if: ${{ job.status == 'success' }}
        uses: Azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS}}
                  
      - name: Configure Azure CLI
        run: az configure --defaults acr=acrAndresMayor
                
      - name: Configure Docker Environment
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.LOGIN_SERVER}}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          
      - name: Build and Tag Docker Image
        run: |
          docker build -t twitter-front .
          docker tag twitter ${{ secrets.LOGIN_SERVER}}/twitter:${{ github.sha }}
                  
      - name: Push Image to ACR
        run: docker push ${{ secrets.LOGIN_SERVER}}/twitter:${{ github.sha }}
